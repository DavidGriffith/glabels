
General
-------

- Validate and clean up label templates:


Development plan
----------------
This development plan sets a specific set of milestones for future
versions of glabels.  Although subject to change, milestones leading
to version 2.0 are fairly well defined.


Goals for 1.90:

		-  port all current features/capabilities to the GNOME 2.0
		   platform [Completed]

		-  clean up the architecture, and create a bonobo shell.
                   [Completed]


Goals for 2.0:

		-  Clean up label and template formats.
		   (See data/glabels-2.0.dtd) [Completed]

		-  A Properties toolbar.  This will let the user change
		   certain properties (font, colors, and line widths) of
		   selected objects en-masse. [Completed]

		-  A docked property dialog.  Instead of popping up individual
		   property dialogs, a single dialog will be docked in the
		   main window.  This dialog will be automatically displayed
		   for new objects, so that the user can begin editing
		   text, selecting images, or entering barcode data.

		-  Migrate to libgnomeprint-2.2. [Completed]



Goals for beyond 2.0:

		-  Editing text in-place.

		-  Make text items rich.  I.e. allow multiple characteristics
		   to exist within a single object.

		-  Text effects.  (follow contour, non-rectangular text boxes,
	           ...)

		-  Object shadows.  This is very important for text that
		   overlays photographs, so that it stands out against
		   varying backgrounds.

		-  Undo, Redo capability

		-  Create a druid for creating new label templates.
		   As part of the druid allow test sheets to be printed
		   and the new labels e-mailed to me (at the user's request).
		   Include a mini-preview, as the label is constructed.

		-  Along those same lines, create a druid to download new
		   templates from a central repository, much like in GBonds.

		-  Allow multiple label styles per template. For instance
		   a sheet may contain a CD label, and cover label.  This
		   may cause problems for document merges -- labels could be
		   considered grouped for document merges when their numbers
		   match or they could have document merge applied to them
		   independently but in parallel.  Arrange in a tabbed
		   notebook, or as multiple canvases arranged in view?

		-  support for the import of vector graphics formats such
		   as EPS or SVG.



Odds and ends WISHLIST for future versions:	

	- Ability to select/unselect individual records during a merge-print.

	- Add additional "merge" backends.  Candidates include:
		vCard
		generic XML
		freedb (CDDB) for CD labels

	- Add facility for tweaking output (origin).  This should really be
	  part of the underlying print system but is currently difficult to
	  accomplish, so I may want to add the hack.


